<?xml version="1.0" encoding="utf-8"?>
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	applicationComplete="applicationCompleteHandler()"
	preinitialize="preinitializeHandler()"
	creationPolicy="none"
	preloader="com.client.project.preloader.PreloaderView" xmlns:local="*">
	
	
	<mx:Script>
		<![CDATA[
			import com.client.project.io.InitialLoadManagerWrapper;
			import mx.preloaders.DownloadProgressBar;
			import com.layerglue.flex3.base.preloader.DownloadProgressBarExt;
			import com.client.project.preloader.PreloaderView;
			import flash.utils.setTimeout;
			import com.layerglue.flex3.base.events.PreloaderManagerEvent;
			import com.layerglue.flex3.base.preloader.PreloaderManager;
			import com.client.project.vo.StructureRoot;
			
			//com.layerglue.flex3.base.preloader.DownloadProgressBarExt
			//com.client.project.preloader.PreloaderView
			
			private var _initialLoadManager:InitialLoadManagerWrapper;
						
			// The object that will contain the deserialized xml data
			[Bindable]
			public var structureRoot:StructureRoot;
			
			private function applicationCompleteHandler():void
			{
				
			}
			
			private function preinitializeHandler():void
			{
				startLoadProcess();
			}
			
			private function startLoadProcess():void
			{
				_initialLoadManager = new InitialLoadManagerWrapper();
				_initialLoadManager.loader.addEventListener(Event.COMPLETE, initialLoadCompleteHandler);
				_initialLoadManager.start();
			}
			
			private function initialLoadCompleteHandler(event:Event):void
			{
				structureRoot = _initialLoadManager.structureRoot;
				
				createComponentsFromDescriptors();
				
				//setTimeout(test, 1000);
				
				test();
			}
			
			private function test():void
			{
				PreloaderManager.getInstance().preloaderView.triggerComplete();
				preloaderContainer.addChild(PreloaderManager.getInstance().preloaderView as DisplayObject);
				//PreloaderManager.getInstance().preloader.startTransitionOut();
				
				var p:DownloadProgressBarExt = PreloaderManager.getInstance().preloaderView as DownloadProgressBarExt;
			}
			
			[Embed(source="../embedded-assets/images.jpg")]
            [Bindable]
            public var pic1:Class;
            
            [Embed(source="../embedded-assets/google.jpg")]
            [Bindable]
            public var pic2:Class;
			
		]]>
	</mx:Script>
	
	<!-- The Tree and DataGrid controls are good for exploring object heirarchies -->
	<!--
	<mx:HBox>
		<mx:Tree id="projectTree" dataProvider="{structureRoot}" width="220" height="280"/>
		<mx:DataGrid dataProvider="{projectTree.selectedItem}" width="580" height="280"/>
	</mx:HBox>
	-->
	
	
	
	<mx:UIComponent id="preloaderContainer" width="100%" height="100%" />
	<mx:Image source="../embedded-assets/google-logo-3.jpg" width="100" height="100" />
	<mx:Image source="../embedded-assets/images.jpg" width="100" height="100" />
</mx:Application>
