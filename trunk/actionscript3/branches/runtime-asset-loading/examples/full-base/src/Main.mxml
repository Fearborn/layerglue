<?xml version="1.0" encoding="utf-8"?>
<lgapps:PreloadableApplication
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:local="*"
	xmlns:lgapps="com.layerglue.flex3.base.applications.*"
	layout="absolute"
	preinitialize="preinitializeHandler()"
	creationPolicy="none"
	backgroundColor="0xFFFFFF"
	preloader="com.client.project.preloader.PreloaderView"
	preloaderMinDisplayTime="1000">
	
	<mx:Script>
		<![CDATA[
			import com.client.project.vo.StructureRoot;
			import com.layerglue.lib.base.substitution.XMLSubstitutor;
			import com.layerglue.lib.base.substitution.sources.MultiSubstitutionSource;
			import com.layerglue.lib.application.structure.IStructuralData;
			import com.layerglue.lib.base.io.xml.XMLDeserializer;
			import com.client.project.maps.StructureDeserializationMap;
			import com.layerglue.lib.application.setup.InitialSetupManager;
			import com.layerglue.flex3.base.preloader.PreloadManager;
			import mx.collections.ArrayCollection;
			import com.layerglue.lib.base.io.FlashVars;
			import mx.events.FlexEvent;
			import mx.events.EffectEvent;
			import com.layerglue.flex3.base.effects.FadeExt;
			import mx.effects.Fade;
			import com.client.project.io.InitialLoadManager;
			import mx.preloaders.DownloadProgressBar;
			
			//com.layerglue.flex3.base.preloader.DownloadProgressBarExt
			//com.client.project.preloader.PreloaderView
			
			private var _initialLoadManager:InitialLoadManager;
			private var _initialSetupManager:InitialSetupManager;
						
			// The object that will contain the deserialized xml data
			[Bindable]
			public var structureRoot:StructureRoot;
			
			private function preinitializeHandler():void
			{
				FlashVars.initialize(systemManager as DisplayObject);
				
				startLoadProcess();
				
				PreloadManager.getInstance().flexPreloader.addEventListener(FlexEvent.PRELOADER_DONE, flexPreloaderDoneHandler);
			}
			
			private function flexPreloaderDoneHandler(event:Event):void
			{
				reparentPreloader();
				callLater(hidePreloader);
			}
			
			private function startLoadProcess():void
			{
				_initialLoadManager = new InitialLoadManager();
				_initialLoadManager.addEventListener(Event.COMPLETE, initialLoadCompleteHandler);
				_initialLoadManager.start();
			}
			
			private function initialLoadCompleteHandler(event:Event):void
			{
				var populatedStructuralData:XML = populateStructuralDataXML(_initialLoadManager.unpopulatedStructuralDataXML);
				
				structureRoot = deserializeStructuralData(populatedStructuralData);
				
				createComponentsFromDescriptors();
			}
			
			private function hidePreloader():void
			{
				preloaderContainer.visible = false;
				removeChild(preloaderContainer);
			}
			
			private function reparentPreloader():void
			{
				preloaderContainer.addChild(PreloadManager.getInstance().preloaderDisplay as DisplayObject);
			}
			
			private function populateStructuralDataXML(xml:XML):XML
			{
				//Create MultiSubstitution source from multiple sources
				var source:MultiSubstitutionSource = new MultiSubstitutionSource();
				source.addItem(_initialLoadManager.globalConfigSource);
				source.addItem(_initialLoadManager.localeConfigSource);
				source.addItem(_initialLoadManager.localeCopySource);
				
				var substitutor:XMLSubstitutor = new XMLSubstitutor("@", "@");
				
				return substitutor.process(xml, source);
			}
			
			private function deserializeStructuralData(xml:XML):StructureRoot
			{
				var deserializer:XMLDeserializer = new XMLDeserializer();
				deserializer.map = new StructureDeserializationMap();
				
				return deserializer.deserialize(xml);
			}
			
		]]>
	</mx:Script>
	
	<mx:Box width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" direction="vertical">
		<!-- The Tree and DataGrid controls are good for exploring object hierarchies -->
		<mx:HBox>
			<mx:Tree id="projectTree" dataProvider="{structureRoot}" width="220" height="280"/>
			<mx:DataGrid dataProvider="{projectTree.selectedItem}" width="580" height="280"/>
		</mx:HBox>
	</mx:Box>
	<mx:UIComponent id="preloaderContainer" width="100%" height="100%" />
</lgapps:PreloadableApplication>
