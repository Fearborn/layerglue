<?xml version="1.0" encoding="utf-8"?>
<lgapps:PreloadableApplication
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:local="*"
	xmlns:lgapps="com.layerglue.flex3.base.applications.*"
	layout="absolute"
	preinitialize="preinitializeHandler()"
	creationPolicy="none"
	backgroundColor="0xFFFFFF"
	preloader="com.client.project.preloader.PreloaderView"
	preloaderMinDisplayTime="1000" xmlns:setup="com.layerglue.lib.application.setup.*">
	
	<mx:Script>
		<![CDATA[
			import com.layerglue.lib.application.command.requests.URINavigationRequest;
			import com.layerglue.lib.base.collections.EventListenerCollection;
			import com.layerglue.flex3.base.events.PreloadManagerEvent;
			import com.layerglue.lib.base.command.FrontController;
			import com.layerglue.lib.application.command.requests.StructuralDataNavigationRequest;
			import com.layerglue.lib.application.LayerGlueLocator;
			import com.client.project.maps.ProjectControllerToViewMap;
			import com.layerglue.lib.application.maps.ControllerToViewMap;
			import com.client.project.maps.ProjectStructureToControllerMap;
			import com.client.project.command.ProjectFrontControllerMap;
			import com.client.project.maps.ProjectStructureDeserializationMap;
			import com.layerglue.lib.application.setup.InitialSetupManager;
			import com.layerglue.lib.application.navigation.NavigationManager;
			import com.client.project.model.ModelLocator;
			import com.client.project.preloader.PreloaderView;
			import com.layerglue.flex3.base.preloader.PreloadManager;
			import mx.collections.ArrayCollection;
			import com.layerglue.lib.base.io.FlashVars;
			import mx.events.FlexEvent;
			import mx.events.EffectEvent;
			import com.layerglue.flex3.base.effects.FadeExt;
			import mx.effects.Fade;
			import com.client.project.io.InitialAssetManager;
			import mx.preloaders.DownloadProgressBar;
			import com.layerglue.lib.application.navigation.NavigationManager;
			
			[Bindable]
			public var modelLocator:ModelLocator = ModelLocator.getInstance();
			
			private var _initialAssetManager:InitialAssetManager;
			
			private var _preloadListenerCollection:EventListenerCollection;
			
			private function preinitializeHandler():void
			{
				//Initialize the FlashVars instance to be sure the variables being passed in are available
				FlashVars.initialize(systemManager as DisplayObject);
				
				//Hookup requests with commands via the FrontController
				FrontController.initialize([new ProjectFrontControllerMap()]);
				
				_initialAssetManager = new InitialAssetManager();
				
				_preloadListenerCollection = new EventListenerCollection();
				_preloadListenerCollection.createListener(PreloadManager.getInstance(), PreloadManagerEvent.INITIAL_ASSETS_LOAD_COMPLETE, initialAssetsLoadComplete);
				_preloadListenerCollection.createListener(PreloadManager.getInstance(), Event.COMPLETE, preloaderDoneHandler); 
				
				_initialAssetManager.start();
			}
			
			private function initialAssetsLoadComplete(event:PreloadManagerEvent):void
			{
				var initialSetupManager:InitialSetupManager = new InitialSetupManager();
				initialSetupManager.xmlToStructuralDataMap = new ProjectStructureDeserializationMap();
				initialSetupManager.structuralDataToControllerMap = new ProjectStructureToControllerMap();
				initialSetupManager.controllerToViewMap = new ProjectControllerToViewMap();
				initialSetupManager.setup(_initialAssetManager.structuralXML);
								
				createComponentsFromDescriptors();
				
				LayerGlueLocator.getInstance().navigationManager.rootController.viewContainer = rootViewCotainer;
			}
			
			private function preloaderDoneHandler(event:Event):void
			{
				_preloadListenerCollection.destroy();
				
				reparentPreloader();
				
				//TODO Make sure this doesnt need to be on a callLater
				hidePreloader();
				trace("/////// preloading complete");
			}
			
			private function hidePreloader():void
			{
				destroyPreloader();
			}
			
			private function reparentPreloader():void
			{
				preloaderContainer.addChild(PreloadManager.getInstance().preloaderDisplay as DisplayObject);
			}
			
			private function destroyPreloader():void
			{
				(PreloadManager.getInstance().preloaderDisplay as PreloaderView).destroy();
				removeChild(preloaderContainer);
			}
			
			private function doNav():void
			{
				//trace("modelLocator.siteStructure.constructor: "+modelLocator.siteStructure.getChildAt(0).title);
				(new StructuralDataNavigationRequest(modelLocator.siteStructure.getChildAt(0))).dispatch();
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox>
		<mx:HBox>
			<mx:Button label="Goto Home" click="(new StructuralDataNavigationRequest(LayerGlueLocator.getInstance().structuralData.getChildById('home'), true)).dispatch()"/>
			<mx:Button label="Goto Gallery" click="(new StructuralDataNavigationRequest(LayerGlueLocator.getInstance().structuralData.getChildById('gallery'), true)).dispatch()"/>
			<mx:Button label="Goto Artist1" click="(new StructuralDataNavigationRequest(LayerGlueLocator.getInstance().structuralData.getChildById('gallery').getChildById('artist1'), true)).dispatch()"/>
			<mx:Button label="Goto Artist2" click="(new StructuralDataNavigationRequest(LayerGlueLocator.getInstance().structuralData.getChildById('gallery').getChildById('artist2'), true)).dispatch()"/>
			<mx:Button label="Goto Contact" click="(new StructuralDataNavigationRequest(LayerGlueLocator.getInstance().structuralData.getChildById('contact'), true)).dispatch()"/>
		</mx:HBox>
		
		<mx:Text text="Application (one level above anything that's navigable)"/>
		<mx:Box id="rootViewCotainer"/>
		
	</mx:VBox>
	
	<mx:UIComponent id="preloaderContainer" width="100%" height="100%" />
	
</lgapps:PreloadableApplication>
